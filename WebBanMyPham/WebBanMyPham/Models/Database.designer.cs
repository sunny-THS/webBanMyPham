#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanMyPham.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WEBBANMP")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDANHMUC(CHITIETDANHMUC instance);
    partial void UpdateCHITIETDANHMUC(CHITIETDANHMUC instance);
    partial void DeleteCHITIETDANHMUC(CHITIETDANHMUC instance);
    partial void InsertXAPHUONG(XAPHUONG instance);
    partial void UpdateXAPHUONG(XAPHUONG instance);
    partial void DeleteXAPHUONG(XAPHUONG instance);
    partial void InsertCHITIETHD(CHITIETHD instance);
    partial void UpdateCHITIETHD(CHITIETHD instance);
    partial void DeleteCHITIETHD(CHITIETHD instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDIACHIGH(DIACHIGH instance);
    partial void UpdateDIACHIGH(DIACHIGH instance);
    partial void DeleteDIACHIGH(DIACHIGH instance);
    partial void InsertDONGIA(DONGIA instance);
    partial void UpdateDONGIA(DONGIA instance);
    partial void DeleteDONGIA(DONGIA instance);
    partial void InsertGRTK(GRTK instance);
    partial void UpdateGRTK(GRTK instance);
    partial void DeleteGRTK(GRTK instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPPVC(PPVC instance);
    partial void UpdatePPVC(PPVC instance);
    partial void DeletePPVC(PPVC instance);
    partial void InsertQUANHUYEN(QUANHUYEN instance);
    partial void UpdateQUANHUYEN(QUANHUYEN instance);
    partial void DeleteQUANHUYEN(QUANHUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void UpdateTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void DeleteTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void InsertTINHTHANH(TINHTHANH instance);
    partial void UpdateTINHTHANH(TINHTHANH instance);
    partial void DeleteTINHTHANH(TINHTHANH instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WEBBANMPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDANHMUC> CHITIETDANHMUCs
		{
			get
			{
				return this.GetTable<CHITIETDANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<XAPHUONG> XAPHUONGs
		{
			get
			{
				return this.GetTable<XAPHUONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this.GetTable<CHITIETHD>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DIACHIGH> DIACHIGHs
		{
			get
			{
				return this.GetTable<DIACHIGH>();
			}
		}
		
		public System.Data.Linq.Table<DONGIA> DONGIAs
		{
			get
			{
				return this.GetTable<DONGIA>();
			}
		}
		
		public System.Data.Linq.Table<GRTK> GRTKs
		{
			get
			{
				return this.GetTable<GRTK>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PPVC> PPVCs
		{
			get
			{
				return this.GetTable<PPVC>();
			}
		}
		
		public System.Data.Linq.Table<QUANHUYEN> QUANHUYENs
		{
			get
			{
				return this.GetTable<QUANHUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this.GetTable<THONGTINTAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TINHTHANH> TINHTHANHs
		{
			get
			{
				return this.GetTable<TINHTHANH>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpTTTK")]
		public ISingleResult<sp_UpTTTKResult> sp_UpTTTK([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string maTK, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string hoTen, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ngSinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(5)")] string gioiTinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(11)")] string sdt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dChi)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maTK, hoTen, ngSinh, gioiTinh, email, sdt, dChi);
			return ((ISingleResult<sp_UpTTTKResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddDMUC")]
		public ISingleResult<sp_AddDMUCResult> sp_AddDMUC([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenDanhMuc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenDanhMuc);
			return ((ISingleResult<sp_AddDMUCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddLSP")]
		public ISingleResult<sp_AddLSPResult> sp_AddLSP([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenLSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenDanhMuc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenLSP, tenDanhMuc);
			return ((ISingleResult<sp_AddLSPResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddSP")]
		public ISingleResult<sp_AddSPResult> sp_AddSP([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string tenSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string moTa, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> soLuong, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> gia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string nxs, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string urlImage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenLSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenDM)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenSP, moTa, soLuong, gia, nxs, urlImage, tenLSP, tenDM);
			return ((ISingleResult<sp_AddSPResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_CKAcc")]
		public ISingleResult<sp_CKAccResult> sp_CKAcc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pw, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GRNAME", DbType="NVarChar(50)")] string gRNAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, pw, gRNAME);
			return ((ISingleResult<sp_CKAccResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_CKUsername")]
		public ISingleResult<sp_CKUsernameResult> sp_CKUsername([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GRNAME", DbType="NVarChar(50)")] string gRNAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, gRNAME);
			return ((ISingleResult<sp_CKUsernameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetErrorInfo")]
		public ISingleResult<sp_GetErrorInfoResult> sp_GetErrorInfo()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetErrorInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getIDDMUC")]
		public int sp_getIDDMUC([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenDMuc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenDMuc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getIDGR")]
		public int sp_getIDGR([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenGr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenGr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMaHD")]
		public int sp_GetMaHD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string maHD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maHD);
			maHD = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_SetDG")]
		public int sp_SetDG([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> gia)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenSP, gia);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDHD", IsComposable=true)]
		public string fn_autoIDHD()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_hash", IsComposable=true)]
		public System.Data.Linq.Binary fn_hash([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string text)
		{
			return ((System.Data.Linq.Binary)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), text).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDKH", IsComposable=true)]
		public string fn_autoIDKH()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDLSP", IsComposable=true)]
		public string fn_autoIDLSP()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDNV", IsComposable=true)]
		public string fn_autoIDNV()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDSP", IsComposable=true)]
		public string fn_autoIDSP()
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDTK", IsComposable=true)]
		public string fn_autoIDTK([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TENGR", DbType="VarChar(50)")] string tENGR)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tENGR).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_autoIDTTND", IsComposable=true)]
		public string fn_autoIDTTND([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string idLogin)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idLogin).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_getCodeGr", IsComposable=true)]
		public string fn_getCodeGr([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string tenGr)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tenGr).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_getRandom", IsComposable=true)]
		public System.Nullable<int> fn_getRandom([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> min, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> max)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), min, max).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChangeAcc")]
		public ISingleResult<sp_ChangeAccResult> sp_ChangeAcc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pw, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GRNAME", DbType="NVarChar(50)")] string gRNAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, pw, gRNAME);
			return ((ISingleResult<sp_ChangeAccResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddAcc")]
		public ISingleResult<sp_AddAccResult> sp_AddAcc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pw, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GRNAME", DbType="NVarChar(50)")] string gRNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string hoTen, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ngSinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(5)")] string gioiTinh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(11)")] string sdt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string dChi, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> coTK)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, pw, gRNAME, hoTen, ngSinh, gioiTinh, email, sdt, dChi, coTK);
			return ((ISingleResult<sp_AddAccResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddHD")]
		public ISingleResult<sp_AddHDResult> sp_AddHD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string maHD, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string tenKH, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string tenSP, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> soLuong, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iddc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPPVC, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> coTK)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), maHD, tenKH, username, tenSP, soLuong, iddc, idPPVC, coTK);
			return ((ISingleResult<sp_AddHDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDANHMUC")]
	public partial class CHITIETDANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DANHMUC;
		
		private string _ID_LOAISP;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DANHMUCChanging(int value);
    partial void OnID_DANHMUCChanged();
    partial void OnID_LOAISPChanging(string value);
    partial void OnID_LOAISPChanged();
    #endregion
		
		public CHITIETDANHMUC()
		{
			this._DANHMUC = default(EntityRef<DANHMUC>);
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DANHMUC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DANHMUC
		{
			get
			{
				return this._ID_DANHMUC;
			}
			set
			{
				if ((this._ID_DANHMUC != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DANHMUCChanging(value);
					this.SendPropertyChanging();
					this._ID_DANHMUC = value;
					this.SendPropertyChanged("ID_DANHMUC");
					this.OnID_DANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAISP", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOAISP
		{
			get
			{
				return this._ID_LOAISP;
			}
			set
			{
				if ((this._ID_LOAISP != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAISPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAISP = value;
					this.SendPropertyChanged("ID_LOAISP");
					this.OnID_LOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_CHITIETDANHMUC", Storage="_DANHMUC", ThisKey="ID_DANHMUC", OtherKey="ID", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.CHITIETDANHMUCs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.CHITIETDANHMUCs.Add(this);
						this._ID_DANHMUC = value.ID;
					}
					else
					{
						this._ID_DANHMUC = default(int);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CHITIETDANHMUC", Storage="_LOAISP", ThisKey="ID_LOAISP", OtherKey="ID", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.CHITIETDANHMUCs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.CHITIETDANHMUCs.Add(this);
						this._ID_LOAISP = value.ID;
					}
					else
					{
						this._ID_LOAISP = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XAPHUONG")]
	public partial class XAPHUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<int> _ID_QH;
		
		private EntitySet<DIACHIGH> _DIACHIGHs;
		
		private EntityRef<QUANHUYEN> _QUANHUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnID_QHChanging(System.Nullable<int> value);
    partial void OnID_QHChanged();
    #endregion
		
		public XAPHUONG()
		{
			this._DIACHIGHs = new EntitySet<DIACHIGH>(new Action<DIACHIGH>(this.attach_DIACHIGHs), new Action<DIACHIGH>(this.detach_DIACHIGHs));
			this._QUANHUYEN = default(EntityRef<QUANHUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(90)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QH", DbType="Int")]
		public System.Nullable<int> ID_QH
		{
			get
			{
				return this._ID_QH;
			}
			set
			{
				if ((this._ID_QH != value))
				{
					if (this._QUANHUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QHChanging(value);
					this.SendPropertyChanging();
					this._ID_QH = value;
					this.SendPropertyChanged("ID_QH");
					this.OnID_QHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XAPHUONG_DIACHIGH", Storage="_DIACHIGHs", ThisKey="ID", OtherKey="IDXA")]
		public EntitySet<DIACHIGH> DIACHIGHs
		{
			get
			{
				return this._DIACHIGHs;
			}
			set
			{
				this._DIACHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_XAPHUONG", Storage="_QUANHUYEN", ThisKey="ID_QH", OtherKey="ID", IsForeignKey=true)]
		public QUANHUYEN QUANHUYEN
		{
			get
			{
				return this._QUANHUYEN.Entity;
			}
			set
			{
				QUANHUYEN previousValue = this._QUANHUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUANHUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUANHUYEN.Entity = null;
						previousValue.XAPHUONGs.Remove(this);
					}
					this._QUANHUYEN.Entity = value;
					if ((value != null))
					{
						value.XAPHUONGs.Add(this);
						this._ID_QH = value.ID;
					}
					else
					{
						this._ID_QH = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUANHUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.XAPHUONG = this;
		}
		
		private void detach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.XAPHUONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHD")]
	public partial class CHITIETHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_HD;
		
		private string _ID_SP;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_HDChanging(string value);
    partial void OnID_HDChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HD
		{
			get
			{
				return this._ID_HD;
			}
			set
			{
				if ((this._ID_HD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDChanging(value);
					this.SendPropertyChanging();
					this._ID_HD = value;
					this.SendPropertyChanged("ID_HD");
					this.OnID_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5)")]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_HOADON", ThisKey="ID_HD", OtherKey="ID", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_HD = value.ID;
					}
					else
					{
						this._ID_HD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENDANHMUC;
		
		private EntitySet<CHITIETDANHMUC> _CHITIETDANHMUCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENDANHMUCChanging(string value);
    partial void OnTENDANHMUCChanged();
    #endregion
		
		public DANHMUC()
		{
			this._CHITIETDANHMUCs = new EntitySet<CHITIETDANHMUC>(new Action<CHITIETDANHMUC>(this.attach_CHITIETDANHMUCs), new Action<CHITIETDANHMUC>(this.detach_CHITIETDANHMUCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANHMUC", DbType="NVarChar(50)")]
		public string TENDANHMUC
		{
			get
			{
				return this._TENDANHMUC;
			}
			set
			{
				if ((this._TENDANHMUC != value))
				{
					this.OnTENDANHMUCChanging(value);
					this.SendPropertyChanging();
					this._TENDANHMUC = value;
					this.SendPropertyChanged("TENDANHMUC");
					this.OnTENDANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_CHITIETDANHMUC", Storage="_CHITIETDANHMUCs", ThisKey="ID", OtherKey="ID_DANHMUC")]
		public EntitySet<CHITIETDANHMUC> CHITIETDANHMUCs
		{
			get
			{
				return this._CHITIETDANHMUCs;
			}
			set
			{
				this._CHITIETDANHMUCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDANHMUCs(CHITIETDANHMUC entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_CHITIETDANHMUCs(CHITIETDANHMUC entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIACHIGH")]
	public partial class DIACHIGH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SONHA;
		
		private System.Nullable<int> _IDTINH;
		
		private System.Nullable<int> _IDHUYEN;
		
		private System.Nullable<int> _IDXA;
		
		private string _ID_TTTK;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<XAPHUONG> _XAPHUONG;
		
		private EntityRef<QUANHUYEN> _QUANHUYEN;
		
		private EntityRef<THONGTINTAIKHOAN> _THONGTINTAIKHOAN;
		
		private EntityRef<TINHTHANH> _TINHTHANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSONHAChanging(string value);
    partial void OnSONHAChanged();
    partial void OnIDTINHChanging(System.Nullable<int> value);
    partial void OnIDTINHChanged();
    partial void OnIDHUYENChanging(System.Nullable<int> value);
    partial void OnIDHUYENChanged();
    partial void OnIDXAChanging(System.Nullable<int> value);
    partial void OnIDXAChanged();
    partial void OnID_TTTKChanging(string value);
    partial void OnID_TTTKChanged();
    #endregion
		
		public DIACHIGH()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._XAPHUONG = default(EntityRef<XAPHUONG>);
			this._QUANHUYEN = default(EntityRef<QUANHUYEN>);
			this._THONGTINTAIKHOAN = default(EntityRef<THONGTINTAIKHOAN>);
			this._TINHTHANH = default(EntityRef<TINHTHANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONHA", DbType="NVarChar(100)")]
		public string SONHA
		{
			get
			{
				return this._SONHA;
			}
			set
			{
				if ((this._SONHA != value))
				{
					this.OnSONHAChanging(value);
					this.SendPropertyChanging();
					this._SONHA = value;
					this.SendPropertyChanged("SONHA");
					this.OnSONHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTINH", DbType="Int")]
		public System.Nullable<int> IDTINH
		{
			get
			{
				return this._IDTINH;
			}
			set
			{
				if ((this._IDTINH != value))
				{
					if (this._TINHTHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTINHChanging(value);
					this.SendPropertyChanging();
					this._IDTINH = value;
					this.SendPropertyChanged("IDTINH");
					this.OnIDTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHUYEN", DbType="Int")]
		public System.Nullable<int> IDHUYEN
		{
			get
			{
				return this._IDHUYEN;
			}
			set
			{
				if ((this._IDHUYEN != value))
				{
					if (this._QUANHUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHUYENChanging(value);
					this.SendPropertyChanging();
					this._IDHUYEN = value;
					this.SendPropertyChanged("IDHUYEN");
					this.OnIDHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDXA", DbType="Int")]
		public System.Nullable<int> IDXA
		{
			get
			{
				return this._IDXA;
			}
			set
			{
				if ((this._IDXA != value))
				{
					if (this._XAPHUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDXAChanging(value);
					this.SendPropertyChanging();
					this._IDXA = value;
					this.SendPropertyChanged("IDXA");
					this.OnIDXAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TTTK", DbType="VarChar(20)")]
		public string ID_TTTK
		{
			get
			{
				return this._ID_TTTK;
			}
			set
			{
				if ((this._ID_TTTK != value))
				{
					if (this._THONGTINTAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TTTKChanging(value);
					this.SendPropertyChanging();
					this._ID_TTTK = value;
					this.SendPropertyChanged("ID_TTTK");
					this.OnID_TTTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHIGH_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_DC")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XAPHUONG_DIACHIGH", Storage="_XAPHUONG", ThisKey="IDXA", OtherKey="ID", IsForeignKey=true)]
		public XAPHUONG XAPHUONG
		{
			get
			{
				return this._XAPHUONG.Entity;
			}
			set
			{
				XAPHUONG previousValue = this._XAPHUONG.Entity;
				if (((previousValue != value) 
							|| (this._XAPHUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XAPHUONG.Entity = null;
						previousValue.DIACHIGHs.Remove(this);
					}
					this._XAPHUONG.Entity = value;
					if ((value != null))
					{
						value.DIACHIGHs.Add(this);
						this._IDXA = value.ID;
					}
					else
					{
						this._IDXA = default(Nullable<int>);
					}
					this.SendPropertyChanged("XAPHUONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_DIACHIGH", Storage="_QUANHUYEN", ThisKey="IDHUYEN", OtherKey="ID", IsForeignKey=true)]
		public QUANHUYEN QUANHUYEN
		{
			get
			{
				return this._QUANHUYEN.Entity;
			}
			set
			{
				QUANHUYEN previousValue = this._QUANHUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUANHUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUANHUYEN.Entity = null;
						previousValue.DIACHIGHs.Remove(this);
					}
					this._QUANHUYEN.Entity = value;
					if ((value != null))
					{
						value.DIACHIGHs.Add(this);
						this._IDHUYEN = value.ID;
					}
					else
					{
						this._IDHUYEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUANHUYEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINTAIKHOAN_DIACHIGH", Storage="_THONGTINTAIKHOAN", ThisKey="ID_TTTK", OtherKey="ID", IsForeignKey=true)]
		public THONGTINTAIKHOAN THONGTINTAIKHOAN
		{
			get
			{
				return this._THONGTINTAIKHOAN.Entity;
			}
			set
			{
				THONGTINTAIKHOAN previousValue = this._THONGTINTAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._THONGTINTAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTINTAIKHOAN.Entity = null;
						previousValue.DIACHIGHs.Remove(this);
					}
					this._THONGTINTAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.DIACHIGHs.Add(this);
						this._ID_TTTK = value.ID;
					}
					else
					{
						this._ID_TTTK = default(string);
					}
					this.SendPropertyChanged("THONGTINTAIKHOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_DIACHIGH", Storage="_TINHTHANH", ThisKey="IDTINH", OtherKey="ID", IsForeignKey=true)]
		public TINHTHANH TINHTHANH
		{
			get
			{
				return this._TINHTHANH.Entity;
			}
			set
			{
				TINHTHANH previousValue = this._TINHTHANH.Entity;
				if (((previousValue != value) 
							|| (this._TINHTHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTHANH.Entity = null;
						previousValue.DIACHIGHs.Remove(this);
					}
					this._TINHTHANH.Entity = value;
					if ((value != null))
					{
						value.DIACHIGHs.Add(this);
						this._IDTINH = value.ID;
					}
					else
					{
						this._IDTINH = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINHTHANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DIACHIGH = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DIACHIGH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGIA")]
	public partial class DONGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ID_SP;
		
		private System.Nullable<double> _GIA;
		
		private System.Nullable<System.DateTime> _NGCAPNHAT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    partial void OnNGCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGCAPNHATChanged();
    #endregion
		
		public DONGIA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGCAPNHAT
		{
			get
			{
				return this._NGCAPNHAT;
			}
			set
			{
				if ((this._NGCAPNHAT != value))
				{
					this.OnNGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGCAPNHAT = value;
					this.SendPropertyChanged("NGCAPNHAT");
					this.OnNGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONGIA", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DONGIAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DONGIAs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRTK")]
	public partial class GRTK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private string _CODEGR;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnCODEGRChanging(string value);
    partial void OnCODEGRChanged();
    #endregion
		
		public GRTK()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODEGR", DbType="Char(2)")]
		public string CODEGR
		{
			get
			{
				return this._CODEGR;
			}
			set
			{
				if ((this._CODEGR != value))
				{
					this.OnCODEGRChanging(value);
					this.SendPropertyChanging();
					this._CODEGR = value;
					this.SendPropertyChanged("CODEGR");
					this.OnCODEGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="ID", OtherKey="ID_GR")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.GRTK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private System.Nullable<double> _DONGIA;
		
		private System.Nullable<int> _ID_DC;
		
		private System.Nullable<int> _ID_VANCHUYEN;
		
		private string _ID_KH;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntityRef<DIACHIGH> _DIACHIGH;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<PPVC> _PPVC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNGTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGTAOChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnID_DCChanging(System.Nullable<int> value);
    partial void OnID_DCChanged();
    partial void OnID_VANCHUYENChanging(System.Nullable<int> value);
    partial void OnID_VANCHUYENChanged();
    partial void OnID_KHChanging(string value);
    partial void OnID_KHChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._DIACHIGH = default(EntityRef<DIACHIGH>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._PPVC = default(EntityRef<PPVC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this.OnNGTAOChanging(value);
					this.SendPropertyChanging();
					this._NGTAO = value;
					this.SendPropertyChanged("NGTAO");
					this.OnNGTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DC", DbType="Int")]
		public System.Nullable<int> ID_DC
		{
			get
			{
				return this._ID_DC;
			}
			set
			{
				if ((this._ID_DC != value))
				{
					if (this._DIACHIGH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DCChanging(value);
					this.SendPropertyChanging();
					this._ID_DC = value;
					this.SendPropertyChanged("ID_DC");
					this.OnID_DCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VANCHUYEN", DbType="Int")]
		public System.Nullable<int> ID_VANCHUYEN
		{
			get
			{
				return this._ID_VANCHUYEN;
			}
			set
			{
				if ((this._ID_VANCHUYEN != value))
				{
					if (this._PPVC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VANCHUYENChanging(value);
					this.SendPropertyChanging();
					this._ID_VANCHUYEN = value;
					this.SendPropertyChanged("ID_VANCHUYEN");
					this.OnID_VANCHUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="VarChar(10)")]
		public string ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID", OtherKey="ID_HD")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIACHIGH_HOADON", Storage="_DIACHIGH", ThisKey="ID_DC", OtherKey="ID", IsForeignKey=true)]
		public DIACHIGH DIACHIGH
		{
			get
			{
				return this._DIACHIGH.Entity;
			}
			set
			{
				DIACHIGH previousValue = this._DIACHIGH.Entity;
				if (((previousValue != value) 
							|| (this._DIACHIGH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIACHIGH.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._DIACHIGH.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_DC = value.ID;
					}
					else
					{
						this._ID_DC = default(Nullable<int>);
					}
					this.SendPropertyChanged("DIACHIGH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="ID_KH", OtherKey="ID", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_KH = value.ID;
					}
					else
					{
						this._ID_KH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PPVC_HOADON", Storage="_PPVC", ThisKey="ID_VANCHUYEN", OtherKey="ID", IsForeignKey=true)]
		public PPVC PPVC
		{
			get
			{
				return this._PPVC.Entity;
			}
			set
			{
				PPVC previousValue = this._PPVC.Entity;
				if (((previousValue != value) 
							|| (this._PPVC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PPVC.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._PPVC.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_VANCHUYEN = value.ID;
					}
					else
					{
						this._ID_VANCHUYEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("PPVC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ID_TK;
		
		private System.Nullable<int> _DIEMTICHLUY;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<KHUYENMAI> _KHUYENMAIs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    partial void OnDIEMTICHLUYChanging(System.Nullable<int> value);
    partial void OnDIEMTICHLUYChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._KHUYENMAIs = new EntitySet<KHUYENMAI>(new Action<KHUYENMAI>(this.attach_KHUYENMAIs), new Action<KHUYENMAI>(this.detach_KHUYENMAIs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15)")]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTICHLUY", DbType="Int")]
		public System.Nullable<int> DIEMTICHLUY
		{
			get
			{
				return this._DIEMTICHLUY;
			}
			set
			{
				if ((this._DIEMTICHLUY != value))
				{
					this.OnDIEMTICHLUYChanging(value);
					this.SendPropertyChanging();
					this._DIEMTICHLUY = value;
					this.SendPropertyChanged("DIEMTICHLUY");
					this.OnDIEMTICHLUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_KH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_KHUYENMAI", Storage="_KHUYENMAIs", ThisKey="ID", OtherKey="ID_KH")]
		public EntitySet<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this._KHUYENMAIs;
			}
			set
			{
				this._KHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<double> _GIATRI;
		
		private System.Nullable<System.DateTime> _NGCAPNHAT;
		
		private System.Nullable<System.DateTime> _NGKETTHUC;
		
		private System.Nullable<bool> _HIEULUC;
		
		private string _ID_KH;
		
		private string _ID_LOAI;
		
		private string _ID_SP;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LOAISP> _LOAISP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGIATRIChanging(System.Nullable<double> value);
    partial void OnGIATRIChanged();
    partial void OnNGCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGCAPNHATChanged();
    partial void OnNGKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnNGKETTHUCChanged();
    partial void OnHIEULUCChanging(System.Nullable<bool> value);
    partial void OnHIEULUCChanged();
    partial void OnID_KHChanging(string value);
    partial void OnID_KHChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnID_SPChanging(string value);
    partial void OnID_SPChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LOAISP = default(EntityRef<LOAISP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRI", DbType="Float")]
		public System.Nullable<double> GIATRI
		{
			get
			{
				return this._GIATRI;
			}
			set
			{
				if ((this._GIATRI != value))
				{
					this.OnGIATRIChanging(value);
					this.SendPropertyChanging();
					this._GIATRI = value;
					this.SendPropertyChanged("GIATRI");
					this.OnGIATRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGCAPNHAT
		{
			get
			{
				return this._NGCAPNHAT;
			}
			set
			{
				if ((this._NGCAPNHAT != value))
				{
					this.OnNGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGCAPNHAT = value;
					this.SendPropertyChanged("NGCAPNHAT");
					this.OnNGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGKETTHUC", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGKETTHUC
		{
			get
			{
				return this._NGKETTHUC;
			}
			set
			{
				if ((this._NGKETTHUC != value))
				{
					this.OnNGKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NGKETTHUC = value;
					this.SendPropertyChanged("NGKETTHUC");
					this.OnNGKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIEULUC", DbType="Bit")]
		public System.Nullable<bool> HIEULUC
		{
			get
			{
				return this._HIEULUC;
			}
			set
			{
				if ((this._HIEULUC != value))
				{
					this.OnHIEULUCChanging(value);
					this.SendPropertyChanging();
					this._HIEULUC = value;
					this.SendPropertyChanged("HIEULUC");
					this.OnHIEULUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="VarChar(10)")]
		public string ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="VarChar(6)")]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="VarChar(5)")]
		public string ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_KHUYENMAI", Storage="_KHACHHANG", ThisKey="ID_KH", OtherKey="ID", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.KHUYENMAIs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.KHUYENMAIs.Add(this);
						this._ID_KH = value.ID;
					}
					else
					{
						this._ID_KH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_KHUYENMAI", Storage="_LOAISP", ThisKey="ID_LOAI", OtherKey="ID", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.KHUYENMAIs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.KHUYENMAIs.Add(this);
						this._ID_LOAI = value.ID;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KHUYENMAI", Storage="_SANPHAM", ThisKey="ID_SP", OtherKey="ID", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.KHUYENMAIs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.KHUYENMAIs.Add(this);
						this._ID_SP = value.ID;
					}
					else
					{
						this._ID_SP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENLOAI;
		
		private EntitySet<CHITIETDANHMUC> _CHITIETDANHMUCs;
		
		private EntitySet<KHUYENMAI> _KHUYENMAIs;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAISP()
		{
			this._CHITIETDANHMUCs = new EntitySet<CHITIETDANHMUC>(new Action<CHITIETDANHMUC>(this.attach_CHITIETDANHMUCs), new Action<CHITIETDANHMUC>(this.detach_CHITIETDANHMUCs));
			this._KHUYENMAIs = new EntitySet<KHUYENMAI>(new Action<KHUYENMAI>(this.attach_KHUYENMAIs), new Action<KHUYENMAI>(this.detach_KHUYENMAIs));
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_CHITIETDANHMUC", Storage="_CHITIETDANHMUCs", ThisKey="ID", OtherKey="ID_LOAISP")]
		public EntitySet<CHITIETDANHMUC> CHITIETDANHMUCs
		{
			get
			{
				return this._CHITIETDANHMUCs;
			}
			set
			{
				this._CHITIETDANHMUCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_KHUYENMAI", Storage="_KHUYENMAIs", ThisKey="ID", OtherKey="ID_LOAI")]
		public EntitySet<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this._KHUYENMAIs;
			}
			set
			{
				this._KHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="ID", OtherKey="ID_LOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDANHMUCs(CHITIETDANHMUC entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_CHITIETDANHMUCs(CHITIETDANHMUC entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ID_TK;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15)")]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PPVC")]
	public partial class PPVC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    #endregion
		
		public PPVC()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PPVC_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_VANCHUYEN")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.PPVC = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.PPVC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANHUYEN")]
	public partial class QUANHUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<int> _ID_TINHTHANH;
		
		private EntitySet<XAPHUONG> _XAPHUONGs;
		
		private EntitySet<DIACHIGH> _DIACHIGHs;
		
		private EntityRef<TINHTHANH> _TINHTHANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnID_TINHTHANHChanging(System.Nullable<int> value);
    partial void OnID_TINHTHANHChanged();
    #endregion
		
		public QUANHUYEN()
		{
			this._XAPHUONGs = new EntitySet<XAPHUONG>(new Action<XAPHUONG>(this.attach_XAPHUONGs), new Action<XAPHUONG>(this.detach_XAPHUONGs));
			this._DIACHIGHs = new EntitySet<DIACHIGH>(new Action<DIACHIGH>(this.attach_DIACHIGHs), new Action<DIACHIGH>(this.detach_DIACHIGHs));
			this._TINHTHANH = default(EntityRef<TINHTHANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(90)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TINHTHANH", DbType="Int")]
		public System.Nullable<int> ID_TINHTHANH
		{
			get
			{
				return this._ID_TINHTHANH;
			}
			set
			{
				if ((this._ID_TINHTHANH != value))
				{
					if (this._TINHTHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TINHTHANHChanging(value);
					this.SendPropertyChanging();
					this._ID_TINHTHANH = value;
					this.SendPropertyChanged("ID_TINHTHANH");
					this.OnID_TINHTHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_XAPHUONG", Storage="_XAPHUONGs", ThisKey="ID", OtherKey="ID_QH")]
		public EntitySet<XAPHUONG> XAPHUONGs
		{
			get
			{
				return this._XAPHUONGs;
			}
			set
			{
				this._XAPHUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANHUYEN_DIACHIGH", Storage="_DIACHIGHs", ThisKey="ID", OtherKey="IDHUYEN")]
		public EntitySet<DIACHIGH> DIACHIGHs
		{
			get
			{
				return this._DIACHIGHs;
			}
			set
			{
				this._DIACHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_QUANHUYEN", Storage="_TINHTHANH", ThisKey="ID_TINHTHANH", OtherKey="ID", IsForeignKey=true)]
		public TINHTHANH TINHTHANH
		{
			get
			{
				return this._TINHTHANH.Entity;
			}
			set
			{
				TINHTHANH previousValue = this._TINHTHANH.Entity;
				if (((previousValue != value) 
							|| (this._TINHTHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTHANH.Entity = null;
						previousValue.QUANHUYENs.Remove(this);
					}
					this._TINHTHANH.Entity = value;
					if ((value != null))
					{
						value.QUANHUYENs.Add(this);
						this._ID_TINHTHANH = value.ID;
					}
					else
					{
						this._ID_TINHTHANH = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINHTHANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XAPHUONGs(XAPHUONG entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = this;
		}
		
		private void detach_XAPHUONGs(XAPHUONG entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = null;
		}
		
		private void attach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = this;
		}
		
		private void detach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.QUANHUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENSP;
		
		private string _MOTA;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _NSX;
		
		private string _HINHANH;
		
		private string _ID_LOAI;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntitySet<DONGIA> _DONGIAs;
		
		private EntitySet<KHUYENMAI> _KHUYENMAIs;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnNSXChanging(string value);
    partial void OnNSXChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._DONGIAs = new EntitySet<DONGIA>(new Action<DONGIA>(this.attach_DONGIAs), new Action<DONGIA>(this.detach_DONGIAs));
			this._KHUYENMAIs = new EntitySet<KHUYENMAI>(new Action<KHUYENMAI>(this.attach_KHUYENMAIs), new Action<KHUYENMAI>(this.detach_KHUYENMAIs));
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(MAX)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="NVarChar(30)")]
		public string NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="VarChar(50)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="VarChar(6)")]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_CHITIETHDs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONGIA", Storage="_DONGIAs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<DONGIA> DONGIAs
		{
			get
			{
				return this._DONGIAs;
			}
			set
			{
				this._DONGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KHUYENMAI", Storage="_KHUYENMAIs", ThisKey="ID", OtherKey="ID_SP")]
		public EntitySet<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this._KHUYENMAIs;
			}
			set
			{
				this._KHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_LOAISP", ThisKey="ID_LOAI", OtherKey="ID", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_LOAI = value.ID;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DONGIAs(DONGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_KHUYENMAIs(KHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _USERNAME;
		
		private System.Data.Linq.Binary _PW;
		
		private System.Nullable<int> _ID_GR;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<THONGTINTAIKHOAN> _THONGTINTAIKHOANs;
		
		private EntityRef<GRTK> _GRTK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPWChanging(System.Data.Linq.Binary value);
    partial void OnPWChanged();
    partial void OnID_GRChanging(System.Nullable<int> value);
    partial void OnID_GRChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._THONGTINTAIKHOANs = new EntitySet<THONGTINTAIKHOAN>(new Action<THONGTINTAIKHOAN>(this.attach_THONGTINTAIKHOANs), new Action<THONGTINTAIKHOAN>(this.detach_THONGTINTAIKHOANs));
			this._GRTK = default(EntityRef<GRTK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PW
		{
			get
			{
				return this._PW;
			}
			set
			{
				if ((this._PW != value))
				{
					this.OnPWChanging(value);
					this.SendPropertyChanging();
					this._PW = value;
					this.SendPropertyChanged("PW");
					this.OnPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GR", DbType="Int")]
		public System.Nullable<int> ID_GR
		{
			get
			{
				return this._ID_GR;
			}
			set
			{
				if ((this._ID_GR != value))
				{
					if (this._GRTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GRChanging(value);
					this.SendPropertyChanging();
					this._ID_GR = value;
					this.SendPropertyChanged("ID_GR");
					this.OnID_GRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_THONGTINTAIKHOANs", ThisKey="ID", OtherKey="ID_TAIKHOAN")]
		public EntitySet<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this._THONGTINTAIKHOANs;
			}
			set
			{
				this._THONGTINTAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRTK_TAIKHOAN", Storage="_GRTK", ThisKey="ID_GR", OtherKey="ID", IsForeignKey=true)]
		public GRTK GRTK
		{
			get
			{
				return this._GRTK.Entity;
			}
			set
			{
				GRTK previousValue = this._GRTK.Entity;
				if (((previousValue != value) 
							|| (this._GRTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRTK.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._GRTK.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._ID_GR = value.ID;
					}
					else
					{
						this._ID_GR = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRTK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINTAIKHOAN")]
	public partial class THONGTINTAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGSINH;
		
		private System.Nullable<bool> _GTINH;
		
		private System.Nullable<System.DateTime> _NGTAO;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private string _DCHI;
		
		private string _ID_TAIKHOAN;
		
		private EntitySet<DIACHIGH> _DIACHIGHs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGSINHChanged();
    partial void OnGTINHChanging(System.Nullable<bool> value);
    partial void OnGTINHChanged();
    partial void OnNGTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGTAOChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnID_TAIKHOANChanging(string value);
    partial void OnID_TAIKHOANChanged();
    #endregion
		
		public THONGTINTAIKHOAN()
		{
			this._DIACHIGHs = new EntitySet<DIACHIGH>(new Action<DIACHIGH>(this.attach_DIACHIGHs), new Action<DIACHIGH>(this.detach_DIACHIGHs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGSINH
		{
			get
			{
				return this._NGSINH;
			}
			set
			{
				if ((this._NGSINH != value))
				{
					this.OnNGSINHChanging(value);
					this.SendPropertyChanging();
					this._NGSINH = value;
					this.SendPropertyChanged("NGSINH");
					this.OnNGSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTINH", DbType="Bit")]
		public System.Nullable<bool> GTINH
		{
			get
			{
				return this._GTINH;
			}
			set
			{
				if ((this._GTINH != value))
				{
					this.OnGTINHChanging(value);
					this.SendPropertyChanging();
					this._GTINH = value;
					this.SendPropertyChanged("GTINH");
					this.OnGTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGTAO
		{
			get
			{
				return this._NGTAO;
			}
			set
			{
				if ((this._NGTAO != value))
				{
					this.OnNGTAOChanging(value);
					this.SendPropertyChanging();
					this._NGTAO = value;
					this.SendPropertyChanged("NGTAO");
					this.OnNGTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TAIKHOAN", DbType="VarChar(15)")]
		public string ID_TAIKHOAN
		{
			get
			{
				return this._ID_TAIKHOAN;
			}
			set
			{
				if ((this._ID_TAIKHOAN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._ID_TAIKHOAN = value;
					this.SendPropertyChanged("ID_TAIKHOAN");
					this.OnID_TAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINTAIKHOAN_DIACHIGH", Storage="_DIACHIGHs", ThisKey="ID", OtherKey="ID_TTTK")]
		public EntitySet<DIACHIGH> DIACHIGHs
		{
			get
			{
				return this._DIACHIGHs;
			}
			set
			{
				this._DIACHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_TAIKHOAN", ThisKey="ID_TAIKHOAN", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.THONGTINTAIKHOANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.THONGTINTAIKHOANs.Add(this);
						this._ID_TAIKHOAN = value.ID;
					}
					else
					{
						this._ID_TAIKHOAN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINTAIKHOAN = this;
		}
		
		private void detach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINTAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINHTHANH")]
	public partial class TINHTHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private EntitySet<DIACHIGH> _DIACHIGHs;
		
		private EntitySet<QUANHUYEN> _QUANHUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    #endregion
		
		public TINHTHANH()
		{
			this._DIACHIGHs = new EntitySet<DIACHIGH>(new Action<DIACHIGH>(this.attach_DIACHIGHs), new Action<DIACHIGH>(this.detach_DIACHIGHs));
			this._QUANHUYENs = new EntitySet<QUANHUYEN>(new Action<QUANHUYEN>(this.attach_QUANHUYENs), new Action<QUANHUYEN>(this.detach_QUANHUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(90)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_DIACHIGH", Storage="_DIACHIGHs", ThisKey="ID", OtherKey="IDTINH")]
		public EntitySet<DIACHIGH> DIACHIGHs
		{
			get
			{
				return this._DIACHIGHs;
			}
			set
			{
				this._DIACHIGHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINHTHANH_QUANHUYEN", Storage="_QUANHUYENs", ThisKey="ID", OtherKey="ID_TINHTHANH")]
		public EntitySet<QUANHUYEN> QUANHUYENs
		{
			get
			{
				return this._QUANHUYENs;
			}
			set
			{
				this._QUANHUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = this;
		}
		
		private void detach_DIACHIGHs(DIACHIGH entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = null;
		}
		
		private void attach_QUANHUYENs(QUANHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = this;
		}
		
		private void detach_QUANHUYENs(QUANHUYEN entity)
		{
			this.SendPropertyChanging();
			entity.TINHTHANH = null;
		}
	}
	
	public partial class sp_UpTTTKResult
	{
		
		private string _Message;
		
		public sp_UpTTTKResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddDMUCResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _Message;
		
		public sp_AddDMUCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddLSPResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _Message;
		
		public sp_AddLSPResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddSPResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _Message;
		
		public sp_AddSPResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_CKAccResult
	{
		
		private string _Message;
		
		public sp_CKAccResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_CKUsernameResult
	{
		
		private string _Message;
		
		public sp_CKUsernameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_GetErrorInfoResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _Message;
		
		public sp_GetErrorInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_ChangeAccResult
	{
		
		private string _Message;
		
		public sp_ChangeAccResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddAccResult
	{
		
		private string _Message;
		
		public sp_AddAccResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	public partial class sp_AddHDResult
	{
		
		private string _Message;
		
		public sp_AddHDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
